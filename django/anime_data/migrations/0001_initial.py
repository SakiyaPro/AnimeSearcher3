# Generated by Django 3.2.9 on 2021-11-11 07:23

import anime_data.models.models_validations.models_validations
from django.db import migrations, models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='CharacterData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annictId', models.IntegerField(unique=True, verbose_name='AnnictId')),
                ('name', models.TextField(blank=True, null=True, verbose_name='キャラ名')),
                ('nameEn', models.TextField(blank=True, null=True, verbose_name='キャラ名EN')),
                ('nameKana', models.TextField(blank=True, null=True, verbose_name='キャラ名かな')),
                ('nickname', models.TextField(blank=True, null=True, verbose_name='ニックネーム')),
                ('nicknameEn', models.TextField(blank=True, null=True, verbose_name='ニックネームEN')),
                ('age', models.TextField(blank=True, null=True, verbose_name='年齢')),
                ('ageEn', models.TextField(blank=True, null=True, verbose_name='年齢EN')),
                ('birthday', models.TextField(blank=True, null=True, verbose_name='誕生日')),
                ('bloodType', models.TextField(blank=True, null=True, verbose_name='血液型')),
                ('birthdayEn', models.TextField(blank=True, null=True, verbose_name='血液型EN')),
                ('height', models.TextField(blank=True, null=True, verbose_name='誕生日')),
                ('heightEn', models.TextField(blank=True, null=True, verbose_name='誕生日')),
                ('weight', models.TextField(blank=True, null=True, verbose_name='誕生日')),
                ('weightEn', models.TextField(blank=True, null=True, verbose_name='誕生日')),
                ('nationality', models.TextField(blank=True, null=True, verbose_name='国籍')),
                ('nationalityEn', models.TextField(blank=True, null=True, verbose_name='国籍EN')),
                ('occupation', models.TextField(blank=True, null=True, verbose_name='職業')),
                ('occupationEn', models.TextField(blank=True, null=True, verbose_name='職業EN')),
                ('description', models.TextField(blank=True, null=True, verbose_name='キャラ紹介')),
                ('descriptionEn', models.TextField(blank=True, null=True, verbose_name='キャラ紹介EN')),
                ('descriptionSource', models.TextField(blank=True, null=True, verbose_name='キャラ紹介ソース')),
                ('descriptionSourceEn', models.TextField(blank=True, null=True, verbose_name='キャラ紹介ソースEN')),
                ('favoriteCharactersCount', models.IntegerField(blank=True, null=True, verbose_name='Annictユーザーお気に入り数')),
                ('series', models.TextField(blank=True, null=True, validators=[anime_data.models.models_validations.models_validations.validation_dict], verbose_name='アニメシリーズ')),
            ],
            options={
                'verbose_name_plural': 'CharacterData',
                'db_table': 'anime_character_db',
            },
        ),
        migrations.CreateModel(
            name='PersonData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annictId', models.IntegerField(unique=True, verbose_name='AnnictId')),
                ('name', models.TextField(unique=True, verbose_name='声優名')),
                ('nameEn', models.TextField(blank=True, null=True, verbose_name='声優名EN')),
                ('nameKana', models.TextField(blank=True, null=True, verbose_name='声優名かな')),
                ('nickname', models.TextField(blank=True, null=True, verbose_name='ニックネーム')),
                ('nicknameEn', models.TextField(blank=True, null=True, verbose_name='ニックネームEN')),
                ('birthday', models.TextField(blank=True, null=True, verbose_name='誕生日')),
                ('bloodType', models.TextField(blank=True, null=True, verbose_name='血液型')),
                ('genderText', models.TextField(blank=True, null=True, verbose_name='性別')),
                ('height', models.TextField(blank=True, null=True, verbose_name='身長')),
                ('castsCount', models.IntegerField(blank=True, null=True, verbose_name='出演本数')),
                ('favoritePeopleCount', models.TextField(blank=True, null=True, verbose_name='Annictユーザーお気に入り数')),
            ],
            options={
                'verbose_name_plural': 'PersonData',
                'db_table': 'anime_person_db',
            },
        ),
        migrations.CreateModel(
            name='AnimeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('annictId', models.IntegerField(unique=True, verbose_name='AnnictId')),
                ('title', models.TextField(unique=True, verbose_name='タイトル')),
                ('titleEn', models.TextField(blank=True, null=True, verbose_name='タイトルEN')),
                ('titleKana', models.TextField(blank=True, null=True, verbose_name='タイトルかな')),
                ('titleRo', models.TextField(blank=True, null=True, verbose_name='タイトルRO')),
                ('casts', models.TextField(blank=True, null=True, validators=[anime_data.models.models_validations.models_validations.validation_list_and_dict], verbose_name='キャスト・声優')),
                ('staffs', models.TextField(blank=True, null=True, validators=[anime_data.models.models_validations.models_validations.validation_list_and_dict], verbose_name='スタッフ・制作会社')),
                ('episodes', models.TextField(blank=True, null=True, validators=[anime_data.models.models_validations.models_validations.validation_list_and_dict], verbose_name='各エピソード詳細')),
                ('episodesCount', models.IntegerField(blank=True, null=True, verbose_name='総エピソード数')),
                ('seasonName', models.TextField(blank=True, null=True, verbose_name='放送季節')),
                ('seasonYear', models.TextField(blank=True, null=True, verbose_name='放送年')),
                ('seriesList', models.TextField(blank=True, null=True, validators=[anime_data.models.models_validations.models_validations.validation_dict], verbose_name='アニメシリーズ')),
                ('watchersCount', models.IntegerField(blank=True, null=True, verbose_name='Annict視聴者数')),
                ('goodCoount', models.PositiveIntegerField(blank=True, null=True, verbose_name='Good Count')),
                ('badCoount', models.PositiveIntegerField(blank=True, null=True, verbose_name='bad Count')),
                ('image', models.ImageField(upload_to='anime/thumbnail')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name_plural': 'AnimeData',
                'db_table': 'anime_db',
            },
        ),
    ]
